From faa967d300aab7dae13e465370087e2765b1274b Mon Sep 17 00:00:00 2001
From: Mehdi Sabwat <mehdi@videolabs.io>
Date: Thu, 29 Apr 2021 00:48:05 +0200
Subject: [PATCH] package: add wasm-emscriten build script

Co-Authored-By: Jean-Baptiste Kempf <jb@videolan.org>
Co-Authored-By: Etienne Brateau <etienne.brateau@gmail.com>
---
 extras/package/wasm-emscripten/build.sh | 188 ++++++++++++++++++++++++
 1 file changed, 188 insertions(+)
 create mode 100755 extras/package/wasm-emscripten/build.sh

diff --git a/extras/package/wasm-emscripten/build.sh b/extras/package/wasm-emscripten/build.sh
new file mode 100755
index 0000000000..ad208e8981
--- /dev/null
+++ b/extras/package/wasm-emscripten/build.sh
@@ -0,0 +1,188 @@
+#! /bin/sh
+# Copyright (C) 2003-2021 the VideoLAN team
+#
+# This file is under the same license as the vlc package.
+
+set -e
+
+diagnostic()
+{
+    echo "### build logs ###: " "$@" 1>&2;
+}
+
+usage()
+{
+    echo "Usage: $0 [--mode=(default=1)]"
+    echo "  --mode=1 build all "
+    echo "  --mode=0 incremental build (do not bootstrap and configure) "  
+}
+
+NM="$EMSDK/upstream/bin/llvm-nm"
+get_symbol()
+{
+    echo "$1" | grep vlc_entry_"$2" | cut -d " " -f 3
+}
+
+get_entryname()
+{
+    symbols=$($NM -g "$1")
+    entryname=$(get_symbol "$symbols" _)
+    echo "$entryname"
+}
+
+while test -n "$1"
+do
+    case "$1" in
+        --help|-h)
+            usage
+            exit 0
+            ;;
+        --mode=*)
+            BUILD_MODE="${1#--mode=}"
+            ;;
+        *)
+            echo "Unrecognized options $1"
+            usage
+            exit 1
+            ;;
+    esac
+    shift
+done
+
+BUILD_MODE=${BUILD_MODE:=1}
+
+diagnostic "setting MAKEFLAGS"
+if [ -z "$MAKEFLAGS" ]; then
+    UNAMES=$(uname -s)
+    MAKEFLAGS=
+    if which nproc >/dev/null; then
+        MAKEFLAGS=-j$(nproc)
+    elif [ "$UNAMES" = "Darwin" ] && which sysctl >/dev/null; then
+        MAKEFLAGS=-j$(sysctl -n machdep.cpu.thread_count)
+    fi
+fi
+
+diagnostic "setting up dir paths"
+if [ "$(basename "$PWD")" = "vlc" ]; then #CI
+    VLC_SRCPATH="$PWD";
+    BUILD_PATH="$PWD/extras/package/wasm-emscripten/build";
+elif [ "$(basename "$PWD")" = "wasm-emscripten" ] \
+    && [ "$(basename "$(dirname "$PWD")")" = "package" ]; then #user
+    BUILD_PATH="$PWD/build";
+    VLC_SRCPATH="$BUILD_PATH/../../../../";
+fi
+mkdir -p "$BUILD_PATH"
+
+diagnostic "build path: "
+echo "$BUILD_PATH";
+
+diagnostic "vlc sources path: "
+echo "$VLC_SRCPATH";
+
+diagnostic "vlc tools: bootstrap"
+mkdir -p "$BUILD_PATH"/extras/tools
+cd "$BUILD_PATH"/extras/tools
+"$VLC_SRCPATH"/extras/tools/bootstrap 
+
+diagnostic "vlc tools: make"
+make -C "$BUILD_PATH"/extras/tools "${MAKEFLAGS}"
+cd "$BUILD_PATH"
+# update the PATH
+export PATH=$BUILD_PATH/extras/tools/build/bin:$PATH
+
+diagnostic "sdk tests: checking if autoconf supports emscripten"
+# https://code.videolan.org/-/snippets/1283
+for file in /usr/share/automake-*
+do
+    # This will pick the latest automake version
+    VERSION="$(echo "$file" | cut -d- -f2)"
+done
+
+diagnostic "using automake version: /usr/share/automake-$VERSION"
+eval "$(test -f /usr/share/automake-"$VERSION"/config.sub)"
+/usr/share/automake-"$VERSION"/config.sub wasm32-unknown-emscripten
+
+mkdir -p "$BUILD_PATH"/contrib-emscripten
+cd "$BUILD_PATH"/contrib-emscripten
+
+diagnostic "vlc contribs: bootstrap"
+"$VLC_SRCPATH"/contrib/bootstrap --disable-disc --disable-sout --disable-net \
+                               --disable-asdcplib --disable-caca --disable-gettext \
+                               --disable-goom --disable-harfbuzz --disable-libplacebo \
+                               --disable-lua --disable-luac --disable-sqlite \
+                               --disable-medialibrary --disable-mpcdec --disable-schroedinger \
+                               --disable-orc --disable-protobuf --disable-sidplay2 \
+                               --disable-soxr --disable-spatialaudio --disable-speex \
+                               --disable-speexdsp --disable-taglib --disable-zvbi \
+                               --disable-rnnoise \
+                               --host=wasm32-unknown-emscripten
+
+diagnostic "vlc contribs: make"
+emmake make "${MAKEFLAGS}"
+cd "$BUILD_PATH"
+
+diagnostic "starting libvlc build"
+BUILDDIR_NAME="build-emscripten"
+mkdir -p "$BUILD_PATH"/$BUILDDIR_NAME
+cd "$BUILD_PATH"/$BUILDDIR_NAME
+if [ $BUILD_MODE -eq 1 ]; then
+    diagnostic "libvlc build: bootstrap"
+    "$VLC_SRCPATH"/bootstrap
+
+    diagnostic "libvlc build: configure"
+    # if_nameindex is not supported in emscripten
+    # ie: not exposed from musl to src/library.js
+    # the test in configure.ac fails because htons is not
+    # in tools/deps_info.py
+
+    # shm.h is a blacklisted module
+    emconfigure "$VLC_SRCPATH"/configure --host=wasm32-unknown-emscripten --enable-debug --enable-gles2 \
+                        --disable-shared --disable-vlc \
+                        --disable-sout --disable-vlm --disable-xcb --disable-lua \
+                        --disable-addonmanagermodules --disable-ssp \
+                        ac_cv_func_if_nameindex=yes ac_cv_header_sys_shm_h=no \
+                        --with-contrib="$BUILD_PATH"/wasm32-unknown-emscripten
+fi
+
+diagnostic "libvlc build: make"
+emmake make "${MAKEFLAGS}"
+cd "$BUILD_PATH"
+
+diagnostic "libvlc build: generate static modules entry points"
+# start by deleting the previous version so that it's not overwritten
+rm -fr $BUILDDIR_NAME/vlc-modules.c $BUILDDIR_NAME/vlc-modules.bc
+cd $BUILDDIR_NAME/modules/.libs
+
+# create module list
+echo "creating module list"
+touch "$BUILD_PATH"/$BUILDDIR_NAME/vlc-modules.c
+printf "// This file is autogenerated\n" > "$BUILD_PATH"/$BUILDDIR_NAME/vlc-modules.c
+printf "#include <unistd.h>\n\n" >> "$BUILD_PATH"/$BUILDDIR_NAME/vlc-modules.c
+VLCMODULES=""
+for file in ./*plugin.a
+do
+    VLCMODULES="$file $VLCMODULES"
+done;
+
+for file in $VLCMODULES
+do
+    printf 'int %s (int (*)(void *, void *, int, ...), void *);\n' \
+           "$(get_entryname "$file")" \
+           >> "$BUILD_PATH"/"$BUILDDIR_NAME"/vlc-modules.c
+done;
+
+printf "const void *vlc_static_modules[] = {\n" \
+       >> "$BUILD_PATH"/"$BUILDDIR_NAME"/vlc-modules.c
+for file in $VLCMODULES
+do
+    printf '%s,\n' "$(get_entryname "$file")" \
+           >> "$BUILD_PATH"/"$BUILDDIR_NAME"/vlc-modules.c
+done;
+printf "NULL};\n" >> "$BUILD_PATH"/"$BUILDDIR_NAME"/vlc-modules.c
+
+diagnostic "vlc static modules: compiling static modules entry points"
+# compile vlc-modules.c
+emcc -pthread -c "$BUILD_PATH"/"$BUILDDIR_NAME"/vlc-modules.c -o "$BUILD_PATH"/"$BUILDDIR_NAME"/vlc-modules.bc
+cd "$BUILD_PATH"
+
+echo "VLC for wasm32-unknown-emscripten built!"
-- 
2.32.0

