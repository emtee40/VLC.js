From acc2ffe2d1483a6e8311ec0cd460765fea670d10 Mon Sep 17 00:00:00 2001
From: Mehdi Sabwat <mehdi@videolabs.io>
Date: Wed, 20 May 2020 01:31:35 +0000
Subject: [PATCH 03/17] compat: add clock_nanosleep & sigwait support for
 emscripten

clock_nanosleep() is not supported in emscripten
Implementation from : https://code.woboq.org/userspace/glibc/sysdeps/unix/clock_nanosleep.c.html
---
 compat/clock_nanosleep.c | 70 ++++++++++++++++++++++++++++++++++++++++
 configure.ac             |  2 ++
 2 files changed, 72 insertions(+)

diff --git a/compat/clock_nanosleep.c b/compat/clock_nanosleep.c
index 494540b8b9..bfe29cec59 100644
--- a/compat/clock_nanosleep.c
+++ b/compat/clock_nanosleep.c
@@ -92,5 +92,75 @@ int clock_nanosleep(clockid_t clock_id, int flags,
         return -1;
     }
 }
+#elif defined (__EMSCRIPTEN__)
+
+#ifdef HAVE_CONFIG_H
+# include "config.h"
+#endif
+
+#include <assert.h>
+#include <errno.h>
+#include <time.h>
+// #include <sysdep-cancel.h>
+
+/* This implementation assumes that these is only a `nanosleep' system
+   call.  So we have to remap all other activities.  */
+int
+//__clock_nanosleep (clockid_t clock_id, int flags, const struct timespec *req,
+//                  struct timespec *rem)
+clock_nanosleep (clockid_t clock_id, int flags, const struct timespec *req,
+                   struct timespec *rem)
+{
+  struct timespec now;
+
+  if (__builtin_expect (req->tv_nsec, 0) < 0
+      || __builtin_expect (req->tv_nsec, 0) >= 1000000000)
+    return EINVAL;
+
+  if (clock_id == CLOCK_THREAD_CPUTIME_ID)
+    return EINVAL;                /* POSIX specifies EINVAL for this case.  */
+
+  if (clock_id < CLOCK_REALTIME || clock_id > CLOCK_THREAD_CPUTIME_ID)
+    return EINVAL;
+
+  /* If we got an absolute time, remap it.  */
+  if (flags == TIMER_ABSTIME)
+    {
+      long int nsec;
+      long int sec;
+      /* Make sure we use safe data types.  */
+      assert (sizeof (sec) >= sizeof (now.tv_sec));
+
+      /* Get the current time for this clock.  */
+      //if (__clock_gettime (clock_id, &now) != 0)
+      if (clock_gettime (clock_id, &now) != 0)
+        return errno;
+
+      /* Compute the difference.  */
+      nsec = req->tv_nsec - now.tv_nsec;
+      sec = req->tv_sec - now.tv_sec - (nsec < 0);
+      if (sec < 0)
+        /* The time has already elapsed.  */
+        return 0;
+
+      now.tv_sec = sec;
+      now.tv_nsec = nsec + (nsec < 0 ? 1000000000 : 0);
+
+      /* From now on this is our time.  */
+      req = &now;
+
+      /* Make sure we are not modifying the struct pointed to by REM.  */
+      rem = NULL;
+    }
+  else if (flags != 0)
+    return EINVAL;
+
+  else if (clock_id != CLOCK_REALTIME)
+    /* Not supported.  */
+    return ENOTSUP;
+  //  return __nanosleep (req, rem), 0 ? errno : 0;
+  return nanosleep (req, rem), 0 ? errno : 0;
+}
+//weak_alias (__clock_nanosleep, clock_nanosleep)
 
 #endif
diff --git a/configure.ac b/configure.ac
index b29755cb26..3429f2fd3f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -372,6 +372,8 @@ case "${host_os}" in
     ;;
   *emscripten*)
     SYS=emscripten
+    AC_LIBOBJ([clock_nanosleep])
+    AC_LIBOBJ([sigwait])
     CC=emcc
     LD=emcc
     LDSHARED=emcc
-- 
2.28.0

