From 94264d7d12dc1207fe83cf0f206077627ecdc72f Mon Sep 17 00:00:00 2001
From: Mehdi Sabwat <mehdi@videolabs.io>
Date: Mon, 9 Nov 2020 22:35:32 +0100
Subject: [PATCH 12/12] logger: add emscripten module

---
 modules/logger/Makefile.am  |  7 +++
 modules/logger/emscripten.c | 93 +++++++++++++++++++++++++++++++++++++
 2 files changed, 100 insertions(+)
 create mode 100644 modules/logger/emscripten.c

diff --git a/modules/logger/Makefile.am b/modules/logger/Makefile.am
index 4addf6dcfd..9b26a68afd 100644
--- a/modules/logger/Makefile.am
+++ b/modules/logger/Makefile.am
@@ -22,3 +22,10 @@ libandroid_logger_plugin_la_LIBADD = -llog
 if HAVE_ANDROID
 logger_LTLIBRARIES += libandroid_logger_plugin.la
 endif
+
+libemscripten_logger_plugin_la_SOURCES = logger/emscripten.c
+libemscripten_logger_plugin_la_CFLAGS = $(AM_CFLAGS)
+
+if HAVE_EMSCRIPTEN
+logger_LTLIBRARIES += libemscripten_logger_plugin.la
+endif
diff --git a/modules/logger/emscripten.c b/modules/logger/emscripten.c
new file mode 100644
index 0000000000..48b8cd39a7
--- /dev/null
+++ b/modules/logger/emscripten.c
@@ -0,0 +1,93 @@
+/*****************************************************************************
+ * emscripten.c: Emscripten logger
+ *****************************************************************************
+ * Copyright Â© 2019 VLC authors and VideoLAN
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
+ *****************************************************************************/
+
+#ifdef HAVE_CONFIG_H
+# include "config.h"
+#endif
+
+#include <emscripten.h>
+
+#include <stdarg.h>
+#include <stdio.h>
+
+#include <vlc_common.h>
+#include <vlc_plugin.h>
+
+static void EmscriptenPrintMsg(void *opaque, int type, const vlc_log_t *p_item,
+                               const char *format, va_list ap)
+{
+    int prio;
+    char *new_format;
+    char *message;
+    int verbose = (intptr_t)opaque;
+
+    if (verbose < type)
+        return;
+    /*
+    if (asprintf(&new_format, "[LIBVLC DEBUG] %s %s: %s",
+                 p_item->psz_module, p_item->psz_object_type, format) < 0)
+        return;
+    */
+    if (asprintf(&new_format, "[vlc.js: 0x%"PRIxPTR"/0x%"PRIxPTR"] %s %s: %s",
+                 p_item->i_object_id, p_item->tid, p_item->psz_module,
+                 p_item->psz_object_type, format) < 0)
+        return;
+    
+    switch (type) {
+        case VLC_MSG_ERR:
+            prio = EM_LOG_ERROR;
+            break;
+        case VLC_MSG_WARN:
+            prio = EM_LOG_WARN;
+            break;
+        default:
+        case VLC_MSG_DBG:
+            prio = EM_LOG_CONSOLE;
+    }
+
+    vasprintf(&message, new_format, ap);
+    emscripten_log(prio, "%s", message);
+    free(new_format);
+    free(message);
+}
+
+static const struct vlc_logger_operations ops = { EmscriptenPrintMsg, NULL };
+
+static const struct vlc_logger_operations *Open(vlc_object_t *obj, void **sysp)
+{
+    int verbosity = var_InheritInteger(obj, "verbose");
+
+    if (verbosity < 0)
+        return NULL;
+
+    verbosity += VLC_MSG_ERR;
+    *sysp = (void *)(uintptr_t)verbosity;
+
+    return &ops;
+}
+
+vlc_module_begin()
+    set_shortname(N_("emlog"))
+    set_description(N_("Emscripten loggger"))
+    set_category(CAT_ADVANCED)
+    set_subcategory(SUBCAT_ADVANCED_MISC)
+    set_capability("logger", 30)
+    set_callbacks(Open, NULL)
+vlc_module_end ()
-- 
2.27.0

