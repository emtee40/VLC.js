From 0e0957ffe41c1f83e352d2dbfd483e51f820c9a3 Mon Sep 17 00:00:00 2001
From: Jameson Ernst <jameson@jpernst.com>
Date: Wed, 23 Aug 2017 21:50:39 -0700
Subject: [PATCH 21/23] Enforce non-zero AL buffer freq Add comment explaining
 state update loop termination

---
 src/library_openal.js | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/library_openal.js b/src/library_openal.js
index a7420c376..2d4597e66 100644
--- a/src/library_openal.js
+++ b/src/library_openal.js
@@ -240,7 +240,14 @@ var LibraryOpenAL = {
         src.bufOffset = (currentTime - audioSrc._startTime) * src.playbackRate;
       } else {
         var skipCount = 0;
-        // In the absence of scheduled buffers, fast-forward playback state to the current time
+        // In the absence of scheduled buffers, fast-forward playback state to the current time.
+        // This loop will continue until one of the following conditions:
+        //   * `nextStartTime` has become greater than `currentTime`
+        //   * `skipCount` becomes equal to `src.bufQueue.length`
+        // This will eventually terminate since either skipCount will increase, or nextStartTime will increase,
+        // depending on which path is taken. skipCount can be reset to 0, but only if nextStartTime has
+        // increased, and nextStartTime can never decrease, so one of the two termination conditions
+        // will eventually happen.
         while (true) {
           if (src.bufsProcessed >= src.bufQueue.length) {
             if (src.looping) {
@@ -3609,6 +3616,14 @@ var LibraryOpenAL = {
 #if OPENAL_DEBUG
       console.error('alBufferData() called with an invalid buffer');
 #endif
+      AL.currentCtx.err = 0xA003 /* AL_INVALID_VALUE */;
+      return;
+    }
+    if (freq <= 0) {
+#if OPENAL_DEBUG
+      console.error('alBufferData() called with an invalid frequency');
+#endif
+      AL.currentCtx.err = 0xA003 /* AL_INVALID_VALUE */;
       return;
     }
 
-- 
2.14.1

